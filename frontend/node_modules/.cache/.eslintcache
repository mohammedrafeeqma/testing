[{"C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\index.js":"1","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\App.js":"2","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\redux\\store.js":"3","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\Sample.jsx":"4","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\constants\\productsConstants.js":"6","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\pages\\user\\Login.jsx":"7","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\pages\\user\\Home.jsx":"8","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\favourite\\Favourite.jsx":"9","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\Navbar\\Navbar.jsx":"10","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\signup\\Signup.jsx":"11","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\feed\\Feed.jsx":"12","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\leftbar\\Leftbar.jsx":"13","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\rightbar\\Rightbar.jsx":"14","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\favourite\\FavouriteList.jsx":"15","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\actions\\productAction.js":"16","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\feed\\Post.jsx":"17","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\UploadPost.jsx":"18","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\feed\\PostView.jsx":"19","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\feed\\Comment.jsx":"20","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\UploadPostDialogue.jsx":"21"},{"size":283,"mtime":1650089670701,"results":"22","hashOfConfig":"23"},{"size":1428,"mtime":1650183948938,"results":"24","hashOfConfig":"23"},{"size":564,"mtime":1646885029138,"results":"25","hashOfConfig":"23"},{"size":477,"mtime":1650089762956,"results":"26","hashOfConfig":"23"},{"size":1043,"mtime":1646884941513,"results":"27","hashOfConfig":"23"},{"size":348,"mtime":1646884620268,"results":"28","hashOfConfig":"23"},{"size":6058,"mtime":1648708105350,"results":"29","hashOfConfig":"23"},{"size":1915,"mtime":1650183974007,"results":"30","hashOfConfig":"23"},{"size":2635,"mtime":1648645544732,"results":"31","hashOfConfig":"23"},{"size":8223,"mtime":1649661232736,"results":"32","hashOfConfig":"23"},{"size":9742,"mtime":1646894447634,"results":"33","hashOfConfig":"23"},{"size":1660,"mtime":1649173798973,"results":"34","hashOfConfig":"23"},{"size":2924,"mtime":1649604848801,"results":"35","hashOfConfig":"23"},{"size":4510,"mtime":1649482497612,"results":"36","hashOfConfig":"23"},{"size":4902,"mtime":1648881741777,"results":"37","hashOfConfig":"23"},{"size":1299,"mtime":1646886809995,"results":"38","hashOfConfig":"23"},{"size":11354,"mtime":1649676291563,"results":"39","hashOfConfig":"23"},{"size":5397,"mtime":1649569726151,"results":"40","hashOfConfig":"23"},{"size":10077,"mtime":1648880826781,"results":"41","hashOfConfig":"23"},{"size":3694,"mtime":1649613807823,"results":"42","hashOfConfig":"23"},{"size":7557,"mtime":1649574473537,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ldxgyx",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"122"},"C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\index.js",[],[],"C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\App.js",["123"],[],"import { BrowserRouter, BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Login from './pages/user/Login'\nimport Home from './pages/user/Home'\nimport Sample from \"./components/Sample\";\n\n\nfunction App() {\n  return (\n\n    \n\n<Router>\n{/* <Routes>\n  <Route  path='/' element={<Login/>}/>\n  <Route  path='/:id' element={<Home/>}/>\n  <Route path='/login' element={<Login/>}/>\n</Routes> */}\n<Routes>        \n  <Route path=\"/\">\n\n    <Route index element={<Login />} />\n    <Route path=\":id\" element={<Home />} />\n    <Route path=\":id/:favourite\" element={<Home />} />\n    <Route path=\"login\" element={<Login />} />\n    {/* <Route path=\"/profile/:username\" element={<Profile />} />\n    <Route path='/search/:searchkey' element={<SearchUser/>} />\n    <Route path=\"/friends\" element={<Friends/>} />\n    <Route path=\"/friends/:discovery\" element={<Friends/>} />\n    <Route path=\"/friends/:sugested\" element={<Friends/>} />\n    <Route path=\"/chat\" element={<Chat/>} />\n    <Route path=\"/events/:nearby\" element={<Events/>} />\n    <Route path=\"/createevents\" element={<CreateEvent/>} />\n    <Route path=\"/404\" element={<NotFound/>} /> */}\n\n    <Route path=\"/sample\" element={<Sample/>} />\n  </Route>\n  \n\n  {/* admin */}\n\n  {/* <Route path=\"/admin\">\n    <Route index element={<AdminLogin />} />\n    <Route path=\":reports\" element={<AdminUsers/>} />\n  </Route> */}\n\n\n  \n  \n</Routes>\n</Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\redux\\store.js",[],[],"C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\Sample.jsx",["124"],[],"import {makeStyles} from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n}))\r\n\r\nfunction Sample() {\r\n    const classes = useStyles()  \r\n  return (\r\n    <div className='image'>\r\n      <h1>hellow wooee</h1>\r\n      <img height='300' width='500' src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\" alt=\"nothing\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sample","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\reducers\\productReducers.js",[],[],"C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\constants\\productsConstants.js",[],[],"C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\pages\\user\\Login.jsx",["125"],[],"import { Button, makeStyles, TextField, Typography } from \"@material-ui/core\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Signup from \"../../components/signup/Signup\";\r\nimport axios from \"axios\";\r\nimport { Alert } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#0D8E8E\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#0D8E8f\",\r\n    },\r\n    color: \"white\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  loginRegisterButton: {\r\n    width: \"75%\",\r\n    backgroundColor: green[600],\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: green[800],\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      fontSize: \"12px\",\r\n    },\r\n  },\r\n  registerButtonDiv: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  login: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f0f2f5\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    overflowY: \"hidden\",\r\n  },\r\n  loginWrapper: {\r\n    width: \"70%\",\r\n    height: \"70%\",\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  loginLeft: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  loginRight: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  loginDesc: {\r\n    fontSize: \"24px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"18px\",\r\n    },\r\n  },\r\n  loginLogo: {\r\n    fontSize: \"50px\",\r\n    fontWeight: 800,\r\n    color: \"#0D8E8E\",\r\n    marginBottom: \"10px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"24px\",\r\n      fontWeight: 800,\r\n    },\r\n  },\r\n\r\n  loginBox: {\r\n    height: \"350px\",\r\n    padding: \"20px\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"10px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"spaceBetween\",\r\n  },\r\n  textfield: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n\r\n  loginForgot: {\r\n    textAlign: \"center\",\r\n    color: \"#1775ee\",\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n  useEffect(() => {\r\n    \r\n    \r\n    if (token) {\r\n  \r\n      navigate(`/${userId}`);\r\n    }\r\n  },[token,userId]);\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [uerror, setuError] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [perror, setpError] = useState(\"\"); \r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setuError(\"\");\r\n    setpError(\"\");\r\n    if (username.trim() === \"\") {\r\n      return setuError(\"username Required\");\r\n    }\r\n    if (password.trim() === \"\") {\r\n      return setpError(\"Password required\");\r\n    }\r\n    console.log(username);\r\n    const data = { username, password };\r\n\r\n    try {\r\n      let res = await axios.post(\"/api/auth/login\", data);\r\n      if (res) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        localStorage.setItem(\"userId\", res.data.user._id);\r\n\r\n        navigate(`/${res.data.user._id}`);\r\n      }\r\n    } catch ({ response }) {\r\n      if (response.status) {\r\n        console.log(response.data);\r\n        setError(response.data);\r\n      }\r\n      console.log(response.status);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.login}>\r\n      <div className={classes.loginWrapper}>\r\n        <div className={classes.loginLeft}>\r\n          <Typography className={classes.loginLogo} variant=\"h3\">\r\n            Social Chat\r\n          </Typography>\r\n          <Typography className={classes.logoDesc} variant=\"span\">\r\n            Connect with friends and the world around you on Social Chat.\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.loginRight}>\r\n          <div className={classes.loginBox}>\r\n            <form className={classes.root}>\r\n              {error ? (\r\n                <Alert className={classes.alert} severity=\"error\">\r\n                  {error}\r\n                </Alert>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <TextField\r\n                error={uerror}\r\n                helperText={uerror ? \"username required *\" : \"\"}\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                className={classes.textfield}\r\n                label=\"username\"\r\n              />\r\n              <TextField\r\n                error={perror}\r\n                helperText={perror ? \"password required *\" : \"\"}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className={classes.textfield}\r\n                label=\"password\"\r\n              />\r\n              <Button\r\n                onClick={handleLogin}\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                large\r\n              >\r\n                Login\r\n              </Button>\r\n              <Typography className={classes.loginForgot} variant=\"span\">\r\n                Forgot Password?\r\n              </Typography>\r\n              <div className={classes.registerButtonDiv}>\r\n                <Button\r\n                  onClick={() => setOpen(true)}\r\n                  className={classes.loginRegisterButton}\r\n                  variant=\"contained\"\r\n                  large\r\n                >\r\n                  Create New Account\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Signup open={open} setOpen={setOpen} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\pages\\user\\Home.jsx",["126","127","128"],[],"import { Grid } from \"@material-ui/core\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Feed from \"../../components/home/feed/Feed\";\r\nimport Leftbar from \"../../components/home/leftbar/Leftbar\";\r\nimport Rightbar from \"../../components/home/rightbar/Rightbar\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {useParams} from 'react-router'\r\nimport Favourite from \"../../components/favourite/Favourite\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nfunction Home() {\r\n  const [menu, setMenu] = useState(false);\r\n  const navigate = useNavigate();\r\n  const[onlineUsers, setOnlineUsers] = useState([])\r\n  const socket = useRef();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/login\")\r\n    }\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"ws://localhost:8900\");\r\n    socket.current.emit(\"addUser\", user._id);\r\n    socket.current.on(\"getUsers\", (users) => {\r\n      setOnlineUsers(user.following?.filter(f=>users.some(u=>u.userId ===f)))\r\n    });\r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  const{favourite} = useParams()\r\n// ! this is critical comments\r\n// * this is a highlighted comment\r\n// todo: this is todo comment\r\n// ? this a question comment\r\n// this is a normal comment\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar val={setMenu} menu={menu} />\r\n\r\n      <Grid container>\r\n        <Grid item sm={2} xs={12}>\r\n          <Leftbar val={menu} />\r\n        </Grid>\r\n        <Grid item sm={7} xs={12}>\r\n         {favourite? <Favourite/> :<Feed />} \r\n        </Grid>\r\n        <Grid item sm={3}>\r\n          <Rightbar onlineUsers={onlineUsers} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\favourite\\Favourite.jsx",["129","130","131","132","133","134","135"],[],"import {Box, Card, makeStyles, Typography} from \"@material-ui/core\"\r\nimport { Delete, Remove } from \"@material-ui/icons\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { listuserDetails } from \"../../actions/productAction\"\r\nimport FavouriteList from \"./FavouriteList\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    main:{\r\n        marginTop:theme.spacing(15),\r\n        margin:theme.spacing(5)\r\n\r\n    },\r\n    card:{\r\n        display:'flex',\r\n        justifyContent:'space-between',\r\n        marginTop:theme.spacing(2)\r\n    },\r\n    title:{\r\n        margin:theme.spacing(2),\r\n        fontWeight:500\r\n    },\r\n    box:{\r\n        display:'flex',\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    postImg:{\r\n        width:\"100px\",\r\n        height:'100px'\r\n    },\r\n    profileImg:{\r\n        width:'25px',\r\n        height:'25px',\r\n        borderRadius:'50%',\r\n        // marginTop:theme.spacing(2)\r\n    },\r\n    postNametext:{\r\n        fontWeight:600\r\n    },\r\n    userInfo:{\r\n        display: 'flex',\r\n        marginTop:theme.spacing()\r\n\r\n    },\r\n    info:{\r\n        marginLeft: theme.spacing(3)\r\n    }\r\n}))\r\n\r\nfunction Favourite() {\r\n\r\n    const userDetails = useSelector( state => state.userDetails)\r\n    const {loading, error, user} = userDetails\r\n    const id = localStorage.getItem(\"userId\");\r\n    const[post, setPost] = useState(null)\r\n    const[empty, setEmpty] = useState(true)\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listuserDetails(id));\r\n  }, [id, dispatch]);\r\n  \r\n    const classes = useStyles()\r\n    useEffect(()=>{\r\n        // user.favourite?.map( async(f)=>{\r\n        //     const res = await axios.get('/api/post/'+f)\r\n        //     console.log(res.data);\r\n        //     post.push(res.data)\r\n        // })\r\n        setPost(user.favourite)\r\n        if(post?.length===0)\r\n        {\r\n            setEmpty(false)\r\n        }\r\n        \r\n    },[user,post])\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n    <Typography variant=\"h5\" className={classes.title}>Favourite</Typography>\r\n\r\n   \r\n       { empty? post?.map((f)=>{\r\n\r\n           return(\r\n            <FavouriteList postId={f} key={f._id}/>\r\n           )\r\n        \r\n       })\r\n      : <div style={{display:'flex', justifyContent:'center', alignItems:'center', height:'50vh'}}>\r\n          <img src=\"https://cdn.dribbble.com/users/1445676/screenshots/3742742/media/c1c261708442cda86a26de469e4f75a1.png?compress=1&resize=400x300\" alt=\"\"/>\r\n          \r\n           </div> } \r\n        \r\n        \r\n    \r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Favourite","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\Navbar\\Navbar.jsx",["136","137","138","139","140","141"],[],"import {\r\n  alpha,\r\n  AppBar,\r\n  Avatar,\r\n  Badge,\r\n  Card,\r\n  Fade,\r\n  InputBase,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  ExitToAppOutlined,\r\n  FeedbackOutlined,\r\n  MenuOutlined,\r\n  MessageOutlined,\r\n  NotificationsActive,\r\n  PersonAdd,\r\n  Search,\r\n} from \"@material-ui/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../../actions/productAction\";\r\nimport axios from \"axios\";\r\nimport {format} from 'timeago.js'\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appbar: {\r\n    backgroundColor: \"#0D8E8E\",\r\n  },\r\n  logoLg: {\r\n    display: \"none\",\r\n    fontFamily: 'Bree Serif',\r\n    fontSize:'28px' ,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n    \"&:hover\":{\r\n      cursor:'pointer'\r\n    }\r\n  },\r\n  logoSm: {\r\n    display: \"block\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  search: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    borderRadius: theme.shape.borderRadius,\r\n    width: \"25%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: (props) => (props.open ? \"flex\" : \"none\"),\r\n      width: (props) => (props.open ? \"60%\" : \"25%\"),\r\n    },\r\n  },\r\n  input: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  icons: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    display: (props) => (props.open ? \"none\" : \"flex\"),\r\n    \"&:hover\":{\r\n      cursor:'pointer'\r\n    }\r\n  },\r\n  badge: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  },\r\n  chatBadge: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  searchButton: {\r\n    marginRight: theme.spacing(1),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  cancel: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  menu: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  more: {\r\n    marginTop: theme.spacing(6),\r\n  },\r\n  notification:{\r\n    // padding:'5px',\r\n    '&:hover':{\r\n      cursor:'pointer',\r\n      backgroundColor:grey[100]\r\n    }\r\n  }\r\n}));\r\n\r\nfunction \r\nNavbar(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  const classes = useStyles({ open });\r\n  const [anchorE1, setAnchorE1] = useState(null);\r\n  const more = Boolean(anchorE1);\r\n  const[openNotification, setOpenNotification] = useState(false)\r\n  const[searchValue, setSearchValue] = useState('')\r\n  const userDetails = useSelector( state => state.userDetails)\r\n  const[notification, setNotification] = useState([])\r\n  \r\n    const{ loading, error, user} = userDetails\r\n  const handleMoreClick = (event) => {\r\n    setAnchorE1(event.currentTarget);\r\n  };\r\n  const handleMoreClose = () => {\r\n    setAnchorE1(null);\r\n  };\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userId\");\r\n\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(()=>{\r\n    const fetchNotification =async ()=>{\r\n      const res = await axios.get('/api/notification/'+user._id)\r\n      setNotification(res.data)\r\n    }\r\n    fetchNotification()\r\n  },[user])\r\n\r\n  console.log(notification);\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  const searchHandler = (e)=>{\r\n      setSearchValue(e.target.value)\r\n  }\r\n  const handleSubmit = async(e)=>{\r\n    e.preventDefault()\r\n    navigate('/search/'+searchValue)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <AppBar position=\"fixed\" className={classes.appbar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <MenuOutlined\r\n          className={classes.menu}\r\n          onClick={() => props.val(!props.menu)}\r\n        />\r\n        <Typography onClick={()=>navigate(`/${user._id}`)} variant=\"h5\" className={classes.logoLg}>\r\n          Social Chat\r\n        </Typography>\r\n        <Typography onClick={()=>navigate(`/${user._id}`)} variant=\"h6\" className={classes.logoSm}>\r\n          Social Chat\r\n        </Typography>\r\n        <div className={classes.search}>\r\n          <form style={{display:'flex',alignItems:'center',marginLeft:'10px'}} onSubmit={handleSubmit}>\r\n          <Search/>\r\n          <InputBase\r\n            placeholder=\"Search...\"\r\n            className={classes.input}\r\n            value={searchValue}\r\n            // onChange={(e)=>{setSearchValue(e.target.value)}}\r\n            onChange={searchHandler}\r\n          ></InputBase>\r\n          <Cancel className={classes.cancel} onClick={() => setOpen(false)} />\r\n          </form>\r\n        </div>\r\n        <div className={classes.icons}>\r\n          <Search\r\n            className={classes.searchButton}\r\n            onClick={() => setOpen(!open)}\r\n          />\r\n          <Badge onClick={()=>setOpenNotification(!openNotification)} badgeContent={notification.length} color=\"secondary\" className={classes.badge}>\r\n            <NotificationsActive />\r\n          </Badge>\r\n          {/* <Badge badgeContent={2} color=\"secondary\" className={classes.badge}>\r\n            <PersonAdd />\r\n          </Badge>\r\n          <Badge\r\n            badgeContent={5}\r\n            color=\"secondary\"\r\n            className={classes.chatBadge}\r\n          >\r\n            <MessageOutlined />\r\n          </Badge> */}\r\n\r\n          <Avatar\r\n            onClick={handleMoreClick}\r\n            alt=\"Cindy Baker\"\r\n            src={user.profilePicture?user.profilePicture:'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png'}\r\n          />\r\n        </div>\r\n      </Toolbar>\r\n      <Menu\r\n        className={classes.more}\r\n        anchorEl={anchorE1}\r\n        keepMounted\r\n        open={more}\r\n        onClose={handleMoreClose}\r\n        TransitionComponent={Fade}\r\n      >\r\n        <MenuItem onClick={()=> navigate(`/profile/${user.username}`)}>\r\n          <Avatar\r\n            style={{ marginRight: 7 }}\r\n            alt=\"Cindy Baker\"\r\n            src={user.profilePicture?user.profilePicture:'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png'}\r\n          />{\" \"}\r\n          Profile\r\n        </MenuItem>\r\n        <MenuItem onClick={handleMoreClose}>\r\n          {\" \"}\r\n          <FeedbackOutlined style={{ marginRight: 6 }} /> Feedback{\" \"}\r\n        </MenuItem>\r\n        \r\n        <MenuItem onClick={logoutHandler}>\r\n          {\" \"}\r\n          <ExitToAppOutlined style={{ marginRight: 6 }} /> Logout\r\n        </MenuItem>\r\n      </Menu>\r\n    </AppBar>\r\n    <Card style={openNotification?{zIndex:90,position:'fixed',right:30,top:65,width:'19%',  display:'block',backgroundColor:'white',height:'90vh'}:{display:'block'}}>\r\n      <div>\r\n        <Typography style={{fontWeight:500,margin:'15px'}} variant=\"h5\">Notification</Typography>\r\n\r\n        {notification.map((n)=>{\r\n          return(\r\n            <div onClick={()=>navigate('/profile/'+n.friendName)} className={classes.notification}>\r\n              <div style={openNotification?{display:'flex',marginTop:'10px'}:{display:'none'}}>\r\n          <img style={openNotification?{display:'block',borderRadius:'50%',margin:'6px 5px 0 10px'}:{display:'none'}} width='30' height='30' src={n.img?n.img:'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png'}/>\r\n          <div>\r\n            <Typography style={{fontSize:16}} component=\"span\" variant=\"h6\">{n.friendName}</Typography>\r\n            <Typography component='span'> {n.action}</Typography>\r\n            <Typography style={{lineHeight:'0.6',fontSize:'12px'}}>{format(n.createdAt)}</Typography>\r\n          </div>\r\n        </div>\r\n          </div>\r\n          )\r\n        })}\r\n        \r\n\r\n        \r\n      </div>\r\n\r\n\r\n      \r\n    </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\signup\\Signup.jsx",["142","143","144","145"],[],"import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport { Alert } from \"@mui/material\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  textFieldDiv: {\r\n    display: \"flex\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  selectInput: {\r\n    display: \"flex\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  dob: {\r\n    marginLeft: theme.spacing(2),\r\n    width: \"50%\",\r\n  },\r\n  dialogTitle: {\r\n    fontSize: 32,\r\n    fontWeight: 800,\r\n    color: \"black\",\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n  signupButton: {\r\n    width: \"50%\",\r\n    backgroundColor: green[600],\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: green[800],\r\n    },\r\n  },\r\n  alert:{\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n  \r\n}));\r\n\r\nfunction Signup({ open, setOpen }) {\r\n  const classes = useStyles();\r\n  const [selectDate, setSelectDate] = useState(new Date());\r\n  const [eselectDate, seteSelectDate] = useState('');\r\n  const [gender, setGender] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [efirstname, seteFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [elastname, seteLastname] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [eusername, seteUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [eemail, seteemail] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [emobile, seteMobile] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [epassword, setePassword] = useState(\"\");\r\n  const [cPassword, setCPassword] = useState(\"\");\r\n  const [ecPassword, seteCPassword] = useState(\"\");\r\n  const [egenders, seteGenders] = useState(\"\");\r\n  const [error, setError] = useState('')\r\n  const navigate = useNavigate()\r\n  const handleSubmit = async (e) => {\r\n     \r\n   \r\n    e.preventDefault();\r\n    seteFirstname('')\r\n    seteLastname('')\r\n    seteUsername('')\r\n    seteMobile('')\r\n    setePassword('')\r\n    seteCPassword('')\r\n    seteSelectDate('')\r\n    seteGenders('')\r\n    seteemail('')\r\n    console.log(selectDate);\r\n    if(firstname==='')\r\n    {\r\n      return seteFirstname(\"firstname Required\")\r\n    }\r\n    if(lastname==='')\r\n    {\r\n      return seteLastname(\"lastname required!\")\r\n    }\r\n    if(username==='')\r\n    {\r\n      return seteUsername(\"username required!\")\r\n    }\r\n    else if(username.length <= 6)\r\n    {\r\n      \r\n      return seteUsername(\"username length should be min 6 letters\")\r\n    }\r\n    if(email==='')\r\n    {\r\n      return seteemail(\"email required\")\r\n    }\r\n    if(mobile==='')\r\n    {\r\n      return seteMobile(\"mobile required!\")\r\n    }\r\n    else if(mobile.length!==10 || mobile >= 0== false)\r\n    {\r\n      \r\n      return seteMobile(\"enter valid mobile number\")\r\n    }\r\n    \r\n    if(password==='')\r\n    {\r\n      return setePassword(\"password required!\")\r\n    }\r\n    if(cPassword!==password)\r\n    {\r\n      return seteCPassword(\"password doesn't match\")\r\n    }\r\n    if(gender==='' || gender==='select')\r\n    {\r\n      return seteGenders('please select gender')\r\n    }\r\n    \r\n    let year = new Date().getFullYear()\r\n    console.log(selectDate.getFullYear())\r\n    console.log(year);\r\n    if(selectDate.getFullYear()=== year)\r\n    {\r\n\r\n      return seteSelectDate(\"dob required\")\r\n    }\r\n  \r\n\r\n    const data = {firstname, lastname, username,email, mobile,password,selectDate, gender}\r\n     \r\n    try{\r\n      let res = await axios.post('/api/auth/signup',data)\r\n      if(res)\r\n      {\r\n        handleClose()\r\n      }\r\n    } catch({response})\r\n    {\r\n      console.log(response.data.keyValue);\r\n      if(response.data.keyValue.email)\r\n      {\r\n        return setError(response.data.keyValue.email + \" is already exists\")\r\n      }\r\n      if(response.data.keyValue.username)\r\n      {\r\n        return setError(response.data.keyValue.username + ' is already exists')\r\n      }\r\n      if(response.data.keyValue.mobile)\r\n      {\r\n        return setError(response.data.keyValue.username + ' is already exists')\r\n      }\r\n    \r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle disableTypography className={classes.dialogTitle}>\r\n          Signup\r\n        </DialogTitle>\r\n        <DialogContent className={classes.dialog}>\r\n          <DialogContentText className={classes.dialogText}>\r\n            It's quick and easy.\r\n          </DialogContentText>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={handleClose}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n          {error ? <Alert className={classes.alert} severity=\"error\">{error}</Alert> :\"\"}\r\n        \r\n          <div className={classes.textFieldDiv}>\r\n            <TextField\r\n              \r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"firstname\"\r\n              fullWidth\r\n              value={firstname}\r\n              onChange={(e)=> setFirstname(e.target.value)}\r\n              error ={ efirstname}\r\n              helperText={efirstname ?  'firstname required!' : ' '}\r\n            />\r\n            <TextField\r\n              className={classes.textField}\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"lastname\"\r\n              fullWidth\r\n              value={lastname}\r\n              onChange={(e)=> setLastname(e.target.value)}\r\n              error ={ elastname}\r\n              helperText={elastname ?  'lastname required!' : ' '}\r\n            />\r\n          </div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            type=\"email\"\r\n            label=\"username\"\r\n            fullWidth\r\n            value={username}\r\n              onChange={(e)=> setUsername(e.target.value)}\r\n              error ={ eusername}\r\n              helperText={eusername ?  eusername : ' '}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            type=\"email\"\r\n            label=\"email\"\r\n            fullWidth\r\n            value={email}\r\n              onChange={(e)=> setEmail(e.target.value)}\r\n              error ={ eemail}\r\n              helperText={eemail ?  eemail : ' '}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            type=\"email\"\r\n            label=\"Mobile Number\"\r\n            fullWidth\r\n            value={mobile}\r\n              onChange={(e)=> setMobile(e.target.value)}\r\n              error ={ emobile}\r\n              helperText={emobile ?  emobile : ' '}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            type=\"email\"\r\n            label=\"Password\"\r\n            fullWidth\r\n            value={password}\r\n              onChange={(e)=> setPassword(e.target.value)}\r\n              error ={ epassword}\r\n              helperText={epassword ?  'password required!' : ' '}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            type=\"email\"\r\n            label=\"Confirm Password\"\r\n            fullWidth\r\n            value={cPassword}\r\n              onChange={(e)=> setCPassword(e.target.value)}\r\n              error ={ ecPassword}\r\n              helperText={ecPassword ?  ecPassword : ' '}\r\n          />\r\n          <div className={classes.selectInput}>\r\n            <Stack width=\"50%\">\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Date of Birth\"\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                defaultValue={selectDate}\r\n                // sx={{ width: 220 }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={(date) => {\r\n                  \r\n                  setSelectDate( new Date(date.nativeEvent.target.value));\r\n                }}\r\n              error ={ eselectDate}\r\n              helperText={eselectDate ?  eselectDate : ' '}\r\n                \r\n              />\r\n            </Stack>\r\n            <TextField\r\n              select\r\n              label=\"Gender\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              value={gender}\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n              onChange={(e) => setGender(e.target.value)}\r\n              className={classes.dob}\r\n              error ={ egenders}\r\n              helperText={egenders ?  egenders : ' '}\r\n              \r\n              \r\n            >\r\n              <option value=\"select\">Select</option>\r\n              <option value=\"Men\">Men</option>\r\n              <option value=\"women\">Women</option>\r\n              <option value=\"Other\">Other</option>\r\n            </TextField>\r\n          </div>\r\n          \r\n        </DialogContent>\r\n        <DialogActions style={{ justifyContent: \"center\" }}>\r\n          <Button\r\n           onClick={handleSubmit}\r\n            className={classes.signupButton}\r\n            variant=\"contained\"\r\n          >\r\n            Signup\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\feed\\Feed.jsx",["146","147","148","149"],[],"import { Container, makeStyles } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Post from \"../feed/Post\";\r\nimport UploadPost from \"../UploadPost\";\r\nimport axios from \"axios\";\r\nimport { listuserDetails } from \"../../../actions/productAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingTop: theme.spacing(10),\r\n    backgroundColor: theme.palette.grey[50],\r\n  },\r\n}));\r\n\r\nfunction Feed({ username }) {\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  const id = localStorage.getItem(\"userId\");\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listuserDetails(id));\r\n  }, [id, dispatch]);\r\n  const classes = useStyles();\r\n  const [posts, setPosts] = useState();\r\n\r\n  useEffect(\r\n    () => {\r\n      const fetchPosts = async () => {\r\n        const res = username\r\n          ? await axios.get(\"/api/post/profile/\" + username)\r\n          : await axios.get(\"/api/post/timeline/\" + user._id);\r\n        console.log(res.data);\r\n        setPosts(\r\n          res.data.sort((p1, p2) => {\r\n            return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n          })\r\n        );\r\n      };\r\n      fetchPosts();\r\n    },\r\n    [user._id],\r\n    posts\r\n  );\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      {!username || (username == user.username && <UploadPost />)}\r\n      {username ? \"\" : <UploadPost />}\r\n      {posts?.map((p) => {\r\n        return <Post key={p._id} post={p} />;\r\n      })}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\leftbar\\Leftbar.jsx",["150","151","152","153"],[],"import {Avatar, Container, makeStyles, Typography} from \"@material-ui/core\"\r\nimport { ChatOutlined, EventOutlined, FolderSpecialOutlined, GroupSharp, Home, PeopleAltOutlined } from \"@material-ui/icons\"\r\nimport {useSelector} from 'react-redux'\r\nimport { useNavigate } from \"react-router\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    container:{\r\n        position:\"sticky\",\r\n        top:0,\r\n        paddingTop: theme.spacing(1),\r\n        backgroundColor: theme.palette.grey[50],\r\n        height: \"100vh\",\r\n        [theme.breakpoints.down('sm')]: {\r\n            position:\"fixed\",\r\n            display:(props) => props.val ? \"block\" : \"none\",\r\n            backgroundColor:\"#0D8E8f\",\r\n            color:\"white\",\r\n            zIndex:10\r\n        }\r\n    },\r\n    item:{\r\n        display:\"flex\",\r\n        alignItems:\"center\",\r\n        marginBottom: theme.spacing(4),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginBottom: theme.spacing(3),\r\n            cursor:\"pointer\"\r\n        }\r\n    },\r\n    icon:{\r\n        marginRight: theme.spacing(1)\r\n\r\n    },\r\n    text:{\r\n        fontWeight: 900,\r\n        fontSize: \"20px\",\r\n        fontFamily:'Bitter'\r\n    }\r\n}))\r\n\r\nfunction Leftbar(props) {\r\n    const classes = useStyles({val:props.val})\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const userDetails = useSelector( state => state.userDetails)\r\n    const{ loading, error, user} = userDetails\r\n  return (\r\n    <Container className={classes.container}>\r\n        <div className={classes.item}>\r\n            <Avatar className={classes.icon} alt=\"Cindy Baker\" src={user.profilePicture? user.profilePicture : 'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png'} />\r\n            <Typography className={classes.text}>{user.username}</Typography>\r\n        </div>\r\n        <div className={classes.item} onClick={()=>navigate('/chat')}>\r\n            <ChatOutlined className={classes.icon}/>\r\n            <Typography className={classes.text}>Chat</Typography>\r\n        </div>\r\n        <div className={classes.item} onClick={()=>navigate('/friends')}>\r\n            <PeopleAltOutlined className={classes.icon}/>\r\n            <Typography className={classes.text}>Friends</Typography>\r\n        </div>\r\n        <div onClick={()=>navigate(`/${user._id}/favourite`)} className={classes.item}>\r\n            <FolderSpecialOutlined className={classes.icon}/>\r\n            <Typography className={classes.text}>Favourites</Typography>\r\n        </div>\r\n        {/* <div className={classes.item}>\r\n            <GroupSharp className={classes.icon}/>\r\n            <Typography className={classes.text}>Groups</Typography>\r\n        </div> */}\r\n        <div className={classes.item} onClick={()=>navigate('/events/all')}>\r\n            <EventOutlined className={classes.icon}/>\r\n            <Typography className={classes.text}>Events</Typography>\r\n        </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Leftbar","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\rightbar\\Rightbar.jsx",["154","155","156"],[],"import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Container,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AnnouncementOutlined } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { listuserDetails } from \"../../../actions/productAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingTop: theme.spacing(10),\r\n    position: \"fixed\",\r\n    top: 0,\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  birthdaySpanText: {\r\n    fontWeight: 700,\r\n  },\r\n  rightBarTitle: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n    fontSize: \"18px\",\r\n    fontWeight: 500,\r\n  },\r\n  onlineFriends: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n  },\r\n  onlineFriendsIcon: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n    borderRadius: \"50%\",\r\n    marginBottom:'9px'\r\n  },\r\n  onlineFriendsText: {\r\n    fontWeight: 500,\r\n    fontSize: \"18px\",\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  onlineIcon: {\r\n    width: \"12px\",\r\n    height: \"12px\",\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"limegreen\",\r\n    position: \"absolute\",\r\n    top: -6,\r\n    left: 24,\r\n    border: \"2px solid white\",\r\n  },\r\n}));\r\n\r\nfunction Rightbar({onlineUsers}) {\r\n  const classes = useStyles();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  const[friends, setFriends] = useState()\r\n  const[onlineFriends, setOnlineFriends] = useState()\r\n  const dispatch = useDispatch();\r\n  let { id } = useParams();\r\n  useEffect(() => {\r\n    dispatch(listuserDetails(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n        \r\n    const getFriends = async () => {\r\n        try {\r\n             const res = await axios.get(\"/api/user/friends/\" + user?._id);\r\n             console.log(res);\r\n      setFriends(res.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n     \r\n    };\r\n    getFriends();\r\n  },[user?._id]);\r\n\r\n  useEffect(() => {\r\n    setOnlineFriends(friends?.filter((f) => onlineUsers?.includes(f._id)));\r\n  }, [friends, onlineUsers]);\r\n  \r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Card style={{width:'25%'}}>\r\n        <CardContent style={{ display: \"flex\" }}>\r\n          <CardMedia\r\n            className={classes.cover}\r\n            image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRR9-qTFZHMCeME1tDwmwOBW6rsCU-hB8W0VQ&usqp=CAU\"\r\n            title=\"live from rafee\"\r\n            style={{\r\n              height: \"40px\",\r\n              width: \"50px\",\r\n              objectFit: \"contain\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          />\r\n          <Typography>\r\n            <Box\r\n              className={classes.birthdaySpanText}\r\n              component=\"div\"\r\n              display=\"inline\"\r\n            >\r\n              Rafeeq Ma\r\n            </Box>{\" \"}\r\n            and\r\n            <Box\r\n              component=\"div\"\r\n              display=\"inline\"\r\n              className={classes.birthdaySpanText}\r\n            >\r\n              {\" \"}\r\n              6 other friends{\" \"}\r\n            </Box>\r\n            have birthday today\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Box>\r\n        <Typography className={classes.rightBarTitle} variant=\"h4\">\r\n          Online Friends\r\n        </Typography>\r\n\r\n        {onlineFriends?.length>0? onlineFriends.map((o)=>{\r\n          return(\r\n            <div key={o._id} className={classes.onlineFriends}>\r\n          <img src={o.profilePicture} className={classes.onlineFriendsIcon} />\r\n          <Box\r\n            component=\"div\"\r\n            display=\"inline\"\r\n            className={classes.onlineIcon}\r\n          ></Box>\r\n          <Typography className={classes.onlineFriendsText}>{o.username}</Typography>\r\n        </div>\r\n          )\r\n        }):<div style={{width:'20%',textAlign:'center'}}>\r\n          <AnnouncementOutlined style={{fontSize:'44px'}}/>\r\n          <Typography style={{color:'grey'}} variant=\"p\" component='div'>You have no friends online</Typography>\r\n          \r\n          <Typography style={{color:'grey',marginLeft:'0px'}} variant=\"p\">at the moment</Typography>\r\n          \r\n          </div>}\r\n        \r\n\r\n        \r\n\r\n       \r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Rightbar;\r\n","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\favourite\\FavouriteList.jsx",["157","158","159","160","161","162","163"],[],"import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Close, Delete, Remove } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listuserDetails } from \"../../actions/productAction\";\r\nimport PostView from \"../home/feed/PostView\";\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    marginTop: theme.spacing(15),\r\n    margin: theme.spacing(5),\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    fontWeight: 500,\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  postImg: {\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n  },\r\n  profileImg: {\r\n    width: \"25px\",\r\n    height: \"25px\",\r\n    borderRadius: \"50%\",\r\n    // marginTop:theme.spacing(2)\r\n  },\r\n  postNametext: {\r\n    fontWeight: 600,\r\n  },\r\n  userInfo: {\r\n    display: \"flex\",\r\n    marginTop: theme.spacing(),\r\n  },\r\n  info: {\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction FavouriteList({ postId }) {\r\n  console.log(postId);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  const [post, setPost] = useState(\"\");\r\n  const [postOwner, setPostOwner] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const[refresh, setRefresh] = useState(false)\r\n  const[openPost, setOpenPost] = useState(false)\r\n\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      const res = await axios.get(\"/api/post/\" + postId);\r\n      setPost(res.data);\r\n    };\r\n    fetchPost();\r\n  }, [user,refresh]);\r\n\r\n  useEffect(() => {\r\n    const postOwnerFetch = async () => {\r\n      const res = await axios.post(\"/api/user/\", { userId: post.userId });\r\n      setPostOwner(res.data);\r\n    };\r\n    postOwnerFetch();\r\n  }, [post, refresh]);\r\n\r\n  const deleteHandle = async () => {\r\n    const res = await axios.put(\"/api/post/\" + post._id + \"/favourite\", {\r\n      userId: user._id,\r\n    });\r\n    setRefresh(!refresh)\r\n    setConfirm(false);\r\n  };\r\n  const deleteConfirm = async () => {\r\n    setConfirm(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Dialog style={{padding:'80px', paddingTop:'20px'}} fullWidth open={openPost} onClose={()=>setOpenPost(false)}>\r\n      <Close style={{position:'absolute', right:8, top:8}} onClick={()=>setOpenPost(false)}/>\r\n        <div style={{margin:'20px'}}>\r\n          <PostView post={post}/>\r\n        </div>\r\n    </Dialog>\r\n      <Card className={classes.card}>\r\n        <div>\r\n          <Box className={classes.box}>\r\n            <div>\r\n              <img onClick={()=>setOpenPost(true)} className={classes.postImg} src={post.img} alt=\"\" />\r\n            </div>\r\n            <div className={classes.info}>\r\n              <Typography className={classes.postNametext}>\r\n                {moment(post.createdAt).format('LLLL')}\r\n              </Typography>\r\n              <div className={classes.userInfo}>\r\n                <img\r\n                  className={classes.profileImg}\r\n                  src={postOwner?postOwner.profilePicture:'https://www.kindpng.com/picc/m/207-2074624_white-gray-circle-avatar-png-transparent-png.png'}\r\n                  alt=\"\"\r\n                  \r\n                />\r\n                <Typography style={{ marginLeft: \"5px\" }} component=\"span\">\r\n                  saved from{\" \"}\r\n                </Typography>{\" \"}\r\n                &nbsp;\r\n                <Typography style={{ fontWeight: 600 }} component=\"span\">\r\n                  {postOwner?.username}'s Post\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n        <div onClick={deleteConfirm}>\r\n          <Delete style={{ margin: \"10px\", color: \"#0D8E8E\" }} />\r\n        </div>\r\n\r\n        <Dialog open={confirm} onClose={() => setConfirm(false)}>\r\n          <DialogTitle style={{ fontWeight: 700 }}>Delete?</DialogTitle>\r\n          <hr />\r\n          <DialogContent>\r\n            Do you want to delete item from Favourite\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => deleteHandle()}\r\n              variant=\"contained\"\r\n              style={{ color: \"white\", backgroundColor: \"#0D8E8E\" }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => setConfirm(false)}\r\n              style={{ color: \"#0D8E8E\", backgroundColor: \"white\" }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FavouriteList;\r\n","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\actions\\productAction.js",[],[],"C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\feed\\Post.jsx",["164","165","166","167","168","169","170","171","172"],[],"import {Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, DialogActions, DialogContent, DialogTitle, IconButton, List, ListItem, ListItemIcon, ListItemText, makeStyles, Snackbar, TextareaAutosize, Typography} from \"@material-ui/core\"\r\nimport { red } from \"@material-ui/core/colors\"\r\nimport { Delete, DeleteOutlined, Favorite, FavoriteBorderOutlined, MoreVert, Report, ThumbUp } from \"@material-ui/icons\"\r\nimport { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {format} from 'timeago.js'\r\nimport { Alert, Dialog, ListItemButton } from \"@mui/material\"\r\nimport { useNavigate } from \"react-router\"\r\nimport Comment from \"./Comment\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container:{\r\n        paddingTop: theme.spacing(10),\r\n        backgroundColor: \"white\"\r\n        \r\n    },\r\n    card:{\r\n        \r\n        marginBottom: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]:{\r\n           marginLeft: theme.spacing(15),\r\n           marginRight: theme.spacing(15)\r\n        }\r\n        \r\n    },\r\n    media:{\r\n        height: 0,\r\n    paddingTop: '56.25%',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2)\r\n    },\r\n    expand:{\r\n        marginLeft:\"auto\"\r\n    },\r\n    avatar:{\r\n        backgroundColor: red[500],\r\n        \"&:hover\":{\r\n          cursor:'pointer'\r\n        }\r\n    },\r\n    likeColor:{\r\n        color:\"primary\",\r\n        backgroundColor:red\r\n    },\r\n    cardContent:{\r\n        position:'relative'\r\n    },\r\n   option:{\r\n       padding:0,\r\n       margin:0,\r\n       position:'absolute',\r\n       top:-25,\r\n       right:20,\r\n       backgroundColor:'white',\r\n       border:'1px solid black',\r\n       zIndex:'1'\r\n\r\n    \r\n   },\r\n   avatarImg:{\r\n       objectFit:'fill',\r\n       width:'40px',\r\n       height:'40px'\r\n   }\r\n   \r\n    \r\n}))\r\n\r\nfunction Post({post}) {\r\n    \r\n    const classes = useStyles()\r\n    const[userFriend, setUserFriend] = useState()\r\n    const[like, setLike] = useState(post ?.likes.length)\r\n    const[isLiked, setIsLiked] = useState(false)\r\n    const[postOption, setPostOption] = useState(false)\r\n    const[refresh, setRefresh] = useState(false)\r\n    const[confirm, setConfirm] = useState(false)\r\n    const[alertBar, setAlertBar] = useState(false)\r\n    const[openComment, setOpenComment] = useState(false)\r\n    const[message, setMessage] = useState('')\r\n    const[comment, setComment] = useState([])\r\n    const[commentMsg, setCommentMsg] = useState('')\r\n    const[readMore, setReadMore] = useState('')\r\n    const userDetails = useSelector( state => state.userDetails)\r\n    const{ loading, error, user} = userDetails\r\n    let userPost = user?.username === userFriend?.username\r\n    const navigate = useNavigate()\r\n   const isFavourite = user.favourite.includes(post._id)\r\n\r\n    useEffect(()=>{\r\n        setIsLiked(post?.likes.includes(user._id))\r\n    },[user._id, post?.likes,refresh])\r\n\r\n    useEffect(()=>{\r\n        const fetchUser = async()=>{\r\n            const res = await axios.get(`/api/user?userId=${post.userId}`)\r\n            setUserFriend(res.data)\r\n            \r\n        }\r\n        fetchUser()\r\n    },[post?.userId,post,refresh])\r\n\r\n       const fetchComment = async(p)=>{\r\n            setOpenComment(!openComment)\r\n            const res = await axios.get('/api/post/comment/'+p)\r\n            setComment(res.data)\r\n        }\r\n        \r\n    \r\n    const likeHandler = async()=>{\r\n        try{\r\n           const res = await axios.put('/api/post/'+post._id+'/like',{userId: user._id})\r\n           if(res.data==\"The post has been Liked\" && user._id!=post.userId)\r\n           {\r\n               await axios.post('/api/notification/',{\r\n                userId:userFriend._id,\r\n                friendName:user.username,\r\n                img:post.img,\r\n                postId:post._id,\r\n                action:'Liked your post'\r\n            })\r\n           }\r\n            \r\n        }\r\n        catch(err)\r\n        {}\r\n            setLike(isLiked ? like-1: like+1);\r\n            setIsLiked(!isLiked)\r\n        \r\n    }\r\n    const reportHandle = async() => {\r\n        try {\r\n            const res = await axios.put('/api/post/'+post._id+'/report',{userId:user._id})\r\n            setMessage(res.data)\r\n            setPostOption(false)\r\n            setAlertBar(true)\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    const addToFavourite = async()=>{\r\n\r\n        try {\r\n           const res = await axios.put('/api/post/'+post._id+'/favourite', {userId: user._id})\r\n           if(res)\r\n           {\r\n            setMessage(res.data)\r\n            setPostOption(false)\r\n            setAlertBar(true)\r\n           }\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    const deleteHandle = async()=>{\r\n        setConfirm(true)\r\n    }\r\n    const deletePost=async()=>{\r\n         const res = await axios.delete('/api/post/'+post._id, {userId: user?._id})\r\n         window.location.reload()\r\n         setRefresh(!refresh)\r\n         \r\n    }\r\n    const cancelDelete = ()=>{\r\n        setConfirm(false)\r\n        setPostOption(false)\r\n\r\n    }\r\n\r\n    const commentHandle = async()=>{\r\n       try {\r\n           const res = await axios.post('/api/post/comment/',{userId:user?._id, postId:post._id,comment:commentMsg})\r\n           if(res.data)\r\n           {\r\n               setCommentMsg('')\r\n               fetchComment(post._id)\r\n               setOpenComment(true)\r\n           }\r\n       } catch (error) {\r\n\r\n           \r\n       }\r\n    }\r\n    \r\n  return (\r\n    <>\r\n        \r\n    <Snackbar open={alertBar} onClose={()=>setAlertBar(false)} autoHideDuration={2000}>\r\n        <Alert onClose={()=>setAlertBar(false)} severity='success'>{message}</Alert>\r\n    </Snackbar>\r\n\r\n    {post?\r\n    <Card className={classes.card}>\r\n        <CardHeader\r\n        avatar={\r\n            <Avatar onClick={()=>{navigate('/profile/'+userFriend.username)}} className={classes.avatar}>\r\n                <img className={classes.avatarImg} src={userFriend?.profilePicture? userFriend.profilePicture:'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png'}/>\r\n            </Avatar>\r\n        }\r\n        action={\r\n            <IconButton aria-label=\"settings\" onClick={()=>{setPostOption(!postOption)}}>\r\n                <MoreVert />\r\n                  \r\n            </IconButton>\r\n            \r\n        }\r\n        title=  {userFriend? userFriend.username :''}\r\n        subheader={format(post.createdAt)}\r\n        >\r\n\r\n        </CardHeader>\r\n        <CardContent className={classes.cardContent}>\r\n        {postOption&&  <List sx={{ width: '100%', maxWidth: 360 }} className={classes.option}>\r\n                       {userPost&& <ListItem  disablePadding>\r\n                            <ListItemButton onClick={deleteHandle}>\r\n                                <ListItemIcon>\r\n                                    <Delete/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Delete'/>\r\n                            </ListItemButton>\r\n                        </ListItem>}\r\n                        <ListItem onClick={reportHandle} disablePadding>\r\n                            <ListItemButton>\r\n                                <ListItemIcon>\r\n                                    <Report/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Report'/>\r\n                            </ListItemButton>\r\n                        </ListItem>\r\n                        {post.img && <ListItem disablePadding>\r\n                            <ListItemButton onClick={addToFavourite}>\r\n                                <ListItemIcon>\r\n                                    <Favorite  color={isFavourite? 'secondary':'amber'}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Favourite'/>\r\n                            </ListItemButton>\r\n                        </ListItem>}\r\n                </List>\r\n                \r\n                }\r\n            <CardActions>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {post.desc}\r\n                </Typography>\r\n            </CardActions>\r\n        </CardContent>\r\n        {post.img?\r\n        <CardMedia\r\n        className={classes.media}\r\n        image={post.img}\r\n        title = \"city\"\r\n        />\r\n        :''}\r\n        \r\n        <CardActions disableSpacing>\r\n            <IconButton aria-label=\"like\" className={classes.likeColor} onClick={likeHandler}>\r\n                <ThumbUp style={isLiked?{color:\"#2ab0b0\"}:{color:\"\"}}/>  \r\n            </IconButton>\r\n            <Typography>{like}</Typography>\r\n            <IconButton aria-label=\"like\" className={classes.expand}>\r\n                <Typography onClick={()=>fetchComment(post._id)}>{comment.length?comment.length:''} Comments</Typography>\r\n            </IconButton>\r\n        </CardActions>\r\n        {\r\n            readMore?\r\n            comment.map((c)=>{\r\n                return(\r\n                    <>\r\n                   <Comment fetchComment={fetchComment} c={c} openComment={openComment}/>\r\n\r\n                    </>\r\n                )\r\n            })\r\n            :\r\n            comment.slice(0,3).map((c)=>{\r\n                return(\r\n                    <>\r\n                   <Comment fetchComment={fetchComment} c={c} openComment={openComment}/>\r\n        \r\n                    </>\r\n                   \r\n                )\r\n            })\r\n        \r\n    \r\n        }\r\n        <div style={{display:'flex', justifyContent:'end'}}>\r\n       { comment.length>3 && <Typography onClick={()=>setReadMore(true)} style={readMore?{display:'none'} :openComment?{display:'block',marginRight:'30px',marginBottom:'10px',color:'#0D8E8E'}:{display:'none'}}>Readmore</Typography>\r\n        }\r\n\r\n        {comment.length>3 && <Typography onClick={()=>setReadMore(false)} style={readMore?{display:'block',marginRight:'30px',marginBottom:'10px',color:'#0D8E8E'}:{display:'none'}}>Readless</Typography>\r\n        }\r\n    \r\n\r\n         </div>        \r\n        <div style={openComment?{display:'flex', justifyContent:'space-around',marginBottom:'10px'}:{display:'none'}}>\r\n        <TextareaAutosize\r\n        value={commentMsg}\r\n        onChange={(e)=>setCommentMsg(e.target.value)}\r\n        minRows={2}\r\n        placeholder=\"Comments\"\r\n        style={{width:'70%', borderRadius:'10px',paddingLeft:'8px',paddingTop:'8px'}}\r\n        />\r\n\r\n        <Button onClick={commentHandle}  variant=\"contained\" style={{color:'white', backgroundColor:'green',height:'35px'}}>Send</Button>\r\n\r\n    </div>\r\n            \r\n\r\n        <Dialog open={confirm} onClose={()=>setConfirm(false)}>\r\n        <DialogTitle style={{fontWeight:700}}>\r\n            Delete?\r\n        </DialogTitle>\r\n        <hr/>\r\n        <DialogContent>\r\n        Items that you delete can't be restored.\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={()=>deletePost(post)} variant=\"contained\" style={{color:'white', backgroundColor:'#0D8E8E'}}>Delete</Button>\r\n            <Button variant=\"contained\" onClick={()=>cancelDelete()} style={{color:'#0D8E8E', backgroundColor:'white'}}>Cancel</Button>\r\n        </DialogActions>\r\n\r\n    </Dialog>\r\n\r\n    </Card>\r\n    :\"\"}\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Post","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\UploadPost.jsx",["173","174","175","176","177","178","179"],[],"import {Card, makeStyles} from \"@material-ui/core\"\r\nimport { Cancel, EmojiEmotions, Label, PermMedia, Room } from \"@material-ui/icons\"\r\nimport { useState } from \"react\"\r\nimport UploadPostDialogue from \"./UploadPostDialogue\"\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    share:{\r\n        width:\"71%\",\r\n        borderRadius: \"10px\",\r\n        backgroundColor:\"\",\r\n        [theme.breakpoints.up('sm')]:{\r\n            marginLeft: theme.spacing(15),\r\n            marginRight: theme.spacing(15)\r\n        },\r\n        [theme.breakpoints.down('sm')]:{\r\n            width:\"100%\",\r\n        \r\n            \r\n        },\r\n        marginBottom:theme.spacing(5)\r\n\r\n    },\r\n    shareWrapper:{\r\n        padding:\"10px\"\r\n    },\r\n    shareTop:{\r\n        display:\"flex\",\r\n        alignItems:\"center\"\r\n    },\r\n    shareProfileImg:{\r\n        width:\"50px\",\r\n        height:\"50px\",\r\n        borderRadius:\"50%\",\r\n        objectFit:\"cover\",\r\n        marginRight:\"10px\",\r\n\r\n    },\r\n    shareInput:{\r\n        border:\"none\",\r\n        width:\"80%\",\r\n        fontSize:'16px'\r\n    },\r\n    shareHr:{\r\n        margin:\"20px\",\r\n        width:\"65%\"\r\n    },\r\n    shareImg:{\r\n        width: '100%',\r\n        objectFit: 'cover'\r\n      },\r\n      \r\n      shareCancelImg:{\r\n        position: 'absolute',\r\n        top: \"0\",\r\n        right: '20px',\r\n        cursor: \"pointer\",\r\n        opacity: '0.7'\r\n      },\r\n      shareBottom: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'spaceBetween',\r\n        \r\n      },\r\n      \r\n      shareOptions:{\r\n          display: 'flex',\r\n          marginLeft: \"20px\"\r\n      },\r\n      \r\n      shareOption:{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          marginRight: \"15px\",\r\n          cursor: 'pointer',\r\n          [theme.breakpoints.down('sm')]:{\r\n            display:\"none\"\r\n        }\r\n      },\r\n      \r\n      shareIcon:{\r\n          fontSize: \"18px\",\r\n          marginRight: \"3px\",\r\n          \r\n      },\r\n      \r\n      shareOptionText:{\r\n          fontSize: '14px',\r\n          fontWeight: '500'\r\n      },\r\n      \r\n       shareButton:{\r\n          border: 'none',\r\n          padding: '7px',\r\n          borderRadius: '5px',\r\n          backgroundColor: 'green',\r\n          fontWeight: 500,\r\n          marginRight: '20px',\r\n          cursor: 'pointer',\r\n          color: 'white',\r\n          [theme.breakpoints.down('sm')]:{\r\n            width:\"80%\"\r\n        }\r\n          \r\n      },\r\n      \r\n      shareImgContainer:{\r\n        padding: '0 20px 10px 20px',\r\n        position: 'relative'\r\n      },\r\n      \r\n      shareImg:{\r\n        width: '100%',\r\n        objectFit: 'cover'\r\n      },\r\n      \r\n      shareCancelImg:{\r\n        position: 'absolute',\r\n        top: '0',\r\n        right: '20px',\r\n        cursor: 'pointer',\r\n        opacity: '0.7'\r\n      }\r\n\r\n}))\r\n\r\nfunction UploadPost() {\r\n    const classes = useStyles()\r\n    const[openShare, setOpenShare] = useState(false)\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const {loading, error, user} = userDetails;\r\n\r\n    const handleClickShare = ()=>{\r\n        setOpenShare(true)\r\n    }\r\n    const handleClose = ()=>{\r\n        setOpenShare(false)\r\n    }\r\n  return (\r\n     <>\r\n      <UploadPostDialogue openShare={openShare} handleClose={handleClose}/>\r\n    <Card className={classes.share} onClick={handleClickShare}>\r\n        <div className={classes.shareWrapper}>\r\n            <div className={classes.shareTop}>\r\n                <img\r\n                className={classes.shareProfileImg}\r\n                src={user.profilePicture?user.profilePicture:'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png'}\r\n                />\r\n                <input\r\n                placeholder=\"What's in your mind\"\r\n                className={classes.shareInput}\r\n                />\r\n            </div>\r\n            <hr className={classes.shareHr}/>\r\n            <div className={classes.shareImgContainer}>\r\n                <img\r\n                className={classes.shareImg}\r\n                src=''\r\n                />\r\n                \r\n            </div>\r\n\r\n            <form className={classes.shareBottom} onSubmit={''}>\r\n                <div className={classes.shareOptions}>\r\n\r\n                <label className={classes.shareOption} >\r\n              <PermMedia htmlColor=\"tomato\" className={classes.shareIcon}/>\r\n              <span className={classes.shareOptionText}>Photo or Video</span>\r\n            </label>\r\n            <div className={classes.shareOption}>\r\n              <Label htmlColor=\"blue\" className={classes.shareIcon} />\r\n              <span className={classes.shareOptionText}>Tag</span>\r\n            </div>\r\n            <div className={classes.shareOption}>\r\n              <Room htmlColor=\"green\" className={classes.shareIcon} />\r\n              <span className={classes.shareOptionText}>Location</span>\r\n            </div>\r\n            <div className={classes.shareOption}>\r\n              <EmojiEmotions htmlColor=\"goldenrod\" className={classes.shareIcon} />\r\n              <span className={classes.shareOptionText}>Feelings</span>\r\n            </div>\r\n          </div>\r\n          <button className={classes.shareButton} type=\"submit\">\r\n            Share\r\n          </button>\r\n\r\n            \r\n            </form>\r\n\r\n        </div>\r\n    </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UploadPost","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\feed\\PostView.jsx",["180","181","182","183","184","185","186"],[],"import {Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, DialogActions, DialogContent, DialogTitle, IconButton, List, ListItem, ListItemIcon, ListItemText, makeStyles, Snackbar, TextareaAutosize, Typography} from \"@material-ui/core\"\r\nimport { red } from \"@material-ui/core/colors\"\r\nimport { Delete, DeleteOutlined, Favorite, FavoriteBorderOutlined, MoreVert, Report, ThumbUp } from \"@material-ui/icons\"\r\nimport { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {format} from 'timeago.js'\r\nimport { Alert, Dialog, ListItemButton } from \"@mui/material\"\r\nimport { useNavigate } from \"react-router\"\r\nimport Comment from \"./Comment\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container:{\r\n        paddingTop: theme.spacing(10),\r\n        backgroundColor: \"white\"\r\n        \r\n    },\r\n    card:{\r\n        \r\n        marginBottom: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]:{\r\n           marginLeft: theme.spacing(15),\r\n           marginRight: theme.spacing(15)\r\n        }\r\n        \r\n    },\r\n    media:{\r\n        height: 0,\r\n    paddingTop: '56.25%',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2)\r\n    },\r\n    expand:{\r\n        marginLeft:\"auto\"\r\n    },\r\n    avatar:{\r\n        backgroundColor: red[500]\r\n    },\r\n    likeColor:{\r\n        color:\"primary\",\r\n        backgroundColor:red\r\n    },\r\n    cardContent:{\r\n        position:'relative'\r\n    },\r\n   option:{\r\n       padding:0,\r\n       margin:0,\r\n       position:'absolute',\r\n       top:-25,\r\n       right:20,\r\n       backgroundColor:'white',\r\n       border:'1px solid black',\r\n       zIndex:'1'\r\n\r\n    \r\n   },\r\n   avatarImg:{\r\n       objectFit:'fill',\r\n       width:'40px',\r\n       height:'40px'\r\n   }\r\n   \r\n    \r\n}))\r\n\r\nfunction PostView({post}) {\r\n    \r\n    const classes = useStyles()\r\n    const[userFriend, setUserFriend] = useState()\r\n    const[like, setLike] = useState(post ?.likes.length)\r\n    const[isLiked, setIsLiked] = useState(false)\r\n    const[postOption, setPostOption] = useState(false)\r\n    const[refresh, setRefresh] = useState(false)\r\n    const[confirm, setConfirm] = useState(false)\r\n    const[alertBar, setAlertBar] = useState(false)\r\n    const[openComment, setOpenComment] = useState(false)\r\n    const[message, setMessage] = useState('')\r\n    const[comment, setComment] = useState([])\r\n    const[commentMsg, setCommentMsg] = useState('')\r\n    const userDetails = useSelector( state => state.userDetails)\r\n    const{ loading, error, user} = userDetails\r\n    let userPost = user?.username === userFriend?.username\r\n    const navigate = useNavigate()\r\n   const isFavourite = user.favourite?.includes(post._id)\r\n\r\n    useEffect(()=>{\r\n        setIsLiked(post?.likes.includes(user._id))\r\n    },[user._id, post?.likes,refresh])\r\n\r\n    // useEffect(()=>{\r\n    //     const fetchPost = async()=>{\r\n    //         const res = await axios.get('/api/post/'+postId)\r\n    //         setPost(res.data)\r\n    //     }\r\n    //     fetchPost()\r\n    // })\r\n\r\n    useEffect(()=>{\r\n        const fetchUser = async()=>{\r\n            const res = await axios.get(`/api/user?userId=${post.userId}`)\r\n            setUserFriend(res.data)\r\n            \r\n        }\r\n        fetchUser()\r\n    },[post?.userId,post,refresh])\r\n\r\n       const fetchComment = async(p)=>{\r\n            setOpenComment(!openComment)\r\n            const res = await axios.get('/api/post/comment/'+p)\r\n            setComment(res.data)\r\n            console.log(comment);\r\n        }\r\n        \r\n    \r\n    const likeHandler = ()=>{\r\n        try{\r\n            axios.put('/api/post/'+post._id+'/like',{userId: user._id})\r\n        }\r\n        catch(err)\r\n        {}\r\n            setLike(isLiked ? like-1: like+1);\r\n            setIsLiked(!isLiked)\r\n        \r\n    }\r\n    const reportHandle = async() => {\r\n        try {\r\n            const res = await axios.put('/api/post/'+post._id+'/report',{userId:user._id})\r\n            setMessage(res.data)\r\n            setPostOption(false)\r\n            setAlertBar(true)\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    const addToFavourite = async()=>{\r\n\r\n        try {\r\n           const res = await axios.put('/api/post/'+post._id+'/favourite', {userId: user._id})\r\n           if(res)\r\n           {\r\n            setMessage(res.data)\r\n            setPostOption(false)\r\n            setAlertBar(true)\r\n           }\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n    const deleteHandle = async()=>{\r\n        setConfirm(true)\r\n    }\r\n    const deletePost=async()=>{\r\n         const res = await axios.delete('/api/post/'+post._id, {userId: user?._id})\r\n         window.location.reload()\r\n         setRefresh(!refresh)\r\n         \r\n    }\r\n    const cancelDelete = ()=>{\r\n        setConfirm(false)\r\n        setPostOption(false)\r\n\r\n    }\r\n\r\n    const commentHandle = async()=>{\r\n       try {\r\n           const res = await axios.post('/api/post/comment/',{userId:user?._id, postId:post._id,comment:commentMsg})\r\n           if(res.data)\r\n           {\r\n               setCommentMsg('')\r\n               fetchComment(post._id)\r\n               setOpenComment(true)\r\n           }\r\n       } catch (error) {\r\n\r\n           \r\n       }\r\n    }\r\n    \r\n  return (\r\n    <>\r\n        \r\n    <Snackbar open={alertBar} onClose={()=>setAlertBar(false)} autoHideDuration={2000}>\r\n        <Alert onClose={()=>setAlertBar(false)} severity='success'>{message}</Alert>\r\n    </Snackbar>\r\n\r\n    {post?\r\n    <Card className={classes.card}>\r\n        <CardHeader\r\n        avatar={\r\n            <Avatar onClick={()=>{navigate('/profile/'+userFriend.username)}} className={classes.avatar}>\r\n                <img className={classes.avatarImg} src={userFriend?.profilePicture? userFriend.profilePicture:'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png'}/>\r\n            </Avatar>\r\n        }\r\n        action={\r\n            <IconButton aria-label=\"settings\" onClick={()=>{setPostOption(!postOption)}}>\r\n                <MoreVert />\r\n                  \r\n            </IconButton>\r\n            \r\n        }\r\n        title=  {userFriend? userFriend.username :''}\r\n        subheader={format(post.createdAt)}\r\n        >\r\n\r\n        </CardHeader>\r\n        <CardContent className={classes.cardContent}>\r\n        {postOption&&  <List sx={{ width: '100%', maxWidth: 360 }} className={classes.option}>\r\n                       {userPost&& <ListItem  disablePadding>\r\n                            <ListItemButton onClick={deleteHandle}>\r\n                                <ListItemIcon>\r\n                                    <Delete/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Delete'/>\r\n                            </ListItemButton>\r\n                        </ListItem>}\r\n                        <ListItem onClick={reportHandle} disablePadding>\r\n                            <ListItemButton>\r\n                                <ListItemIcon>\r\n                                    <Report/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Report'/>\r\n                            </ListItemButton>\r\n                        </ListItem>\r\n                        {post.img && <ListItem disablePadding>\r\n                            <ListItemButton onClick={addToFavourite}>\r\n                                <ListItemIcon>\r\n                                    <Favorite  color={isFavourite? 'secondary':'amber'}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Favourite'/>\r\n                            </ListItemButton>\r\n                        </ListItem>}\r\n                </List>\r\n                \r\n                }\r\n            <CardActions>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {post.desc}\r\n                </Typography>\r\n            </CardActions>\r\n        </CardContent>\r\n        {post.img?\r\n        <CardMedia\r\n        className={classes.media}\r\n        image={post.img}\r\n        title = \"city\"\r\n        />\r\n        :''}\r\n        \r\n        <CardActions disableSpacing>\r\n            <IconButton aria-label=\"like\" className={classes.likeColor} onClick={likeHandler}>\r\n                <ThumbUp style={isLiked?{color:\"#2ab0b0\"}:{color:\"\"}}/>  \r\n            </IconButton>\r\n            <Typography>{like}</Typography>\r\n            <IconButton aria-label=\"like\" className={classes.expand}>\r\n                <Typography onClick={()=>fetchComment(post._id)}>Comments</Typography>\r\n            </IconButton>\r\n        </CardActions>\r\n        {comment.map((c)=>{\r\n            return(\r\n               <Comment c={c} openComment={openComment}/>\r\n               \r\n            )\r\n        })}\r\n        <div style={openComment?{display:'flex', justifyContent:'space-around',marginBottom:'10px'}:{display:'none'}}>\r\n        <TextareaAutosize\r\n        value={commentMsg}\r\n        onChange={(e)=>setCommentMsg(e.target.value)}\r\n        minRows={2}\r\n        placeholder=\"Comments\"\r\n        style={{width:'70%', borderRadius:'10px',paddingLeft:'8px',paddingTop:'8px'}}\r\n        />\r\n\r\n        <Button onClick={commentHandle}  variant=\"contained\" style={{color:'white', backgroundColor:'green',height:'35px'}}>Send</Button>\r\n\r\n    </div>\r\n            \r\n\r\n        <Dialog open={confirm} onClose={()=>setConfirm(false)}>\r\n        <DialogTitle style={{fontWeight:700}}>\r\n            Delete?\r\n        </DialogTitle>\r\n        <hr/>\r\n        <DialogContent>\r\n        Items that you delete can't be restored.\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={()=>deletePost(post)} variant=\"contained\" style={{color:'white', backgroundColor:'#0D8E8E'}}>Delete</Button>\r\n            <Button variant=\"contained\" onClick={()=>cancelDelete()} style={{color:'#0D8E8E', backgroundColor:'white'}}>Cancel</Button>\r\n        </DialogActions>\r\n\r\n    </Dialog>\r\n\r\n    </Card>\r\n    :\"\"}\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostView","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\feed\\Comment.jsx",["187","188","189","190","191","192","193","194","195","196"],[],"import {Button, makeStyles, TextareaAutosize, Typography} from \"@material-ui/core\"\r\nimport { grey } from \"@material-ui/core/colors\"\r\nimport { Delete, ThumbUp, ThumbUpOutlined } from \"@material-ui/icons\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {format} from 'timeago.js'\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme) => ({}))\r\n\r\nfunction Comment({fetchComment, openComment,c}) {\r\n    const classes = useStyles()\r\n    const[commentUser, setCommentUser] = useState('')\r\n    const userDetails = useSelector( state => state.userDetails)\r\n    const{ loading, error, user} = userDetails\r\n    const[commentLike, setCommentLike] = useState(c?.likes.length)\r\n    const[isLiked, setIsLiked] = useState(false)\r\n    const[owner, setOwner] = useState(false)\r\n    const[refresh, setRefresh] = useState(false)\r\n    useEffect(()=>{\r\n        const fetchUser = async()=>{\r\n            const res = await axios.post('/api/user/',{userId:c.userId})\r\n            setCommentUser(res.data)\r\n\r\n        }\r\n        fetchUser()\r\n    },[refresh])\r\n\r\n    useEffect(()=>{\r\n        setOwner(user._id===c.userId)\r\n    })\r\n \r\n    useEffect(()=>{\r\n        setIsLiked(c?.likes.includes(user._id))\r\n    },[user._id,c?.likes,refresh])\r\n    const commentLikeHandler = ()=>{\r\n        try {\r\n        axios.put('/api/post/comment/'+c._id+'/like',{userId:user._id})\r\n        } catch (error) {  }\r\n        setCommentLike(isLiked ? commentLike-1 : commentLike+1)\r\n        setIsLiked(!isLiked)\r\n    }\r\n    const commentDeleteHandler = async()=>{\r\n        try {\r\n             await axios.delete('/api/post/comment/'+c._id)\r\n            \r\n                // openComment(true)\r\n                // setRefresh(!refresh)\r\n                fetchComment()\r\n                \r\n               \r\n            \r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n   <>\r\n  {c.comment && <div style={ openComment? {margin:'10px', display:'flex', backgroundColor:'', width:'95%', position:'relative',zIndex:'6' }:{display:'none'}}>\r\n                <div>\r\n                <img width='30' height='30' style={{borderRadius:'50%',marginTop:'3px'}} src={commentUser.profilePicture} alt=\"\" />\r\n                </div>\r\n                <div style={{margin:'0 8px', padding:'8px', backgroundColor:grey[100], width:'100%', Minheight:'30px', borderRadius:'20px'}}>\r\n                    \r\n                    <div>\r\n                        <Typography style={{fontSize:'14px', marginRight:'8px'}} variant=\"h6\" component='span'>{commentUser.username}</Typography>\r\n                        <Typography style={{fontSize:'12px'}} variant=\"p\" component='span'>{format(c.createdAt)}</Typography>\r\n                        \r\n                        {/* <Typography style={{fontSize:'12px'}} variant=\"p\" component='span'>{moment(commentUser.createdAt).startOf('hour').fromNow()}</Typography> */}\r\n\r\n                    </div>\r\n                    <p>{c.comment}</p>\r\n                </div>\r\n               { owner && <div style={{position:'absolute',right:20, top:0}}>\r\n                <Delete onClick={commentDeleteHandler} style={{color:'grey',width:'15px'}}/>\r\n                </div> }\r\n                <div style={{position:'absolute',right:20, bottom:-9,display:'flex'}}>\r\n                <ThumbUp onClick={commentLikeHandler} style={isLiked?{width:'15px', color:'#0D8E8E',marginRight:'3px'}:{width:'15px',color:'gray',marginRight:'3px'}}/>\r\n                <Typography style={{marginTop:'4px',fontSize:'14px'}} variant=\"p\">{commentLike}</Typography>\r\n                </div>\r\n    </div> }\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Comment","C:\\Users\\mohammed rafeeque\\Desktop\\sample\\frontend\\src\\components\\home\\UploadPostDialogue.jsx",["197","198","199","200","201","202","203","204"],[],"import { Card, makeStyles } from \"@material-ui/core\";\r\nimport { Cancel, EmojiEmotions, Label, PermMedia, Room } from \"@material-ui/icons\";\r\nimport { Dialog, DialogTitle, Tooltip, Typography } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  share: {\r\n    \r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"\",\r\n    // marginTop: theme.spacing(5),\r\n    marginBottom: theme.spacing(5),\r\n    margin: theme.spacing(1),\r\n    minHeight: \"50vh\",\r\n    position: 'relative'\r\n  },\r\n  shareWrapper: {\r\n    padding: \"10px\",\r\n  },\r\n  shareTop: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  shareProfileImg: {\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    borderRadius: \"50%\",\r\n    objectFit: \"cover\",\r\n    marginRight: \"10px\",\r\n  },\r\n  shareInput: {\r\n    border: \"none\",\r\n    width: \"80%\",\r\n    height:'100%',\r\n    fontSize:'16px',\r\n    \"&:hover\":{\r\n      height:'100%',\r\n      padding:'10px',\r\n      border:'none'\r\n    }\r\n  },\r\n  shareHr: {\r\n    margin: \"20px\",\r\n    width: \"90%\",\r\n  },\r\n  shareImg: {\r\n    width: \"100%\",\r\n    objectFit: \"cover\",\r\n  },\r\n\r\n  shareCancelImg: {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"20px\",\r\n    cursor: \"pointer\",\r\n    opacity: \"0.7\",\r\n  },\r\n  shareBottom: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"spaceBetween\"\r\n  },\r\n\r\n  shareOptions: {\r\n    display: \"flex\",\r\n    marginLeft: \"20px\",\r\n  },\r\n\r\n  shareOption: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  shareIcon: {\r\n    fontSize: \"28px\",\r\n    marginRight: \"8px\",\r\n    [theme.breakpoints.down('sm')]:{\r\n        fontSize:\"34px\"\r\n    }\r\n  },\r\n\r\n  shareOptionText: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"500\",\r\n  },\r\n\r\n  shareButton: {\r\n    border: \"none\",\r\n    padding: \"7px\",\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"green\",\r\n    fontWeight: 500,\r\n    marginRight: \"20px\",\r\n    cursor: \"pointer\",\r\n    color: \"white\",\r\n    position:'absolute',\r\n    bottom:10,\r\n    right:30,\r\n    [theme.breakpoints.down('sm')]:{\r\n        width:\"80%\",\r\n        right:0,\r\n        left:15,\r\n        bottom:0\r\n    }\r\n  },\r\n\r\n  shareImgContainer: {\r\n    padding: \"0 20px 10px 20px\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  shareImg: {\r\n    width: \"100%\",\r\n    objectFit: \"cover\",\r\n  },\r\n\r\n  shareCancelImg: {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"20px\",\r\n    cursor: \"pointer\",\r\n    opacity: \"0.7\",\r\n  },\r\n \r\n  feelings: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: \"15px\",\r\n    cursor: \"pointer\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  shareImgPreviewContainer:{\r\n    position:'relative',\r\n    height:\"50px\",\r\n    width:\"50%\",\r\n    backgroundColor:'red',\r\n    marginBottom:theme.spacing(9)\r\n  },\r\n  shareImgPreview:{\r\n    height:\"100%px\",\r\n    width:\"100%\",\r\n  },\r\n  cancelButton:{\r\n    position:\"absolute\",\r\n    right:'0'\r\n  },\r\n  formError:{\r\n    marginLeft:theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction UploadPostDialogue({ openShare, handleClose }) {\r\n  const classes = useStyles();\r\n  const[file, setFile] = useState(null)\r\n  const[formError, setFormError] = useState('')\r\n  const[image, setImage] = useState(null)\r\n  const[description, setDescription]= useState('')\r\n  const userDetails = useSelector( state => state.userDetails)\r\n  const{ loading, error, user} = userDetails\r\n  const formHandler= async(e)=>{\r\n    e.preventDefault()\r\n    let reader = new FileReader\r\n    if(!file)\r\n      {\r\n        try {\r\n          await axios.post('api/post/',{userId:user._id, desc:description})\r\n          handleClose()\r\n        } catch ({response}) {\r\n          console.log(response);\r\n        }\r\n      }\r\n      else{\r\n         reader.readAsDataURL(file);\r\n    reader.onloadend = async()=>{\r\n      setImage(reader.result)\r\n      \r\n      if(file.size<100000)\r\n      {\r\n        imageSubmit(reader.result)\r\n      }\r\n      else{\r\n        setFormError('*image size is larger')\r\n    \r\n      }\r\n      \r\n    }\r\n      }\r\n   \r\n    \r\n  }\r\n\r\n  const imageSubmit= async(base64image)=>{\r\n    try {\r\n      let suc = await axios.post('api/post/upload',{image:base64image})\r\n      await axios.post('api/post/',{userId:user._id,desc:description, img:suc.data})\r\n      handleClose()\r\n    } catch ({response}) {\r\n      console.log(response);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Dialog open={openShare} onClose={handleClose} fullWidth>\r\n      <DialogTitle>Create a Post</DialogTitle>\r\n      {formError? <Typography className={classes.formError} color='red'>{formError}</Typography> :'' }\r\n      <Card className={classes.share}> \r\n        <div className={classes.shareWrapper}>\r\n          <div className={classes.shareTop}>\r\n            <img\r\n              className={classes.shareProfileImg}\r\n              src={user.profilePicture?user.profilePicture:'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png'}\r\n            />\r\n            <textarea\r\n\r\n              placeholder=\"What's in your mind\"\r\n              value={description}\r\n              onChange={(e)=>{setDescription(e.target.value)}}\r\n              className={classes.shareInput}\r\n            />\r\n          </div>\r\n          <hr className={classes.shareHr} />\r\n          <div className={classes.shareImgContainer}>\r\n            <img className={classes.shareImg} src=\"\" />\r\n          </div>\r\n\r\n          <form className={classes.shareBottom} onSubmit={formHandler}>\r\n            <div className={classes.shareOptions}>\r\n              <label htmlFor=\"file\" className={classes.shareOption}>\r\n                <PermMedia htmlColor=\"tomato\" className={classes.shareIcon} />\r\n                <span className={classes.shareOptionText}>Photo or Video</span>\r\n                <input\r\n                  style={{ display: \"none\" }}\r\n                  type=\"file\"\r\n                  id=\"file\"\r\n                  accept=\".png,.jpeg,.jpg\"\r\n                  onInputCapture={(e)=>{setFile(e.target.files[0])}}\r\n                />\r\n              </label>\r\n              <Tooltip title=\"comming soon\">\r\n              <div className={(classes.feelings)}>\r\n                <Label htmlColor=\"blue\" className={classes.shareIcon} />\r\n                <span className={classes.shareOptionText}>Tag</span>\r\n              </div>\r\n              </Tooltip>\r\n              <Tooltip title=\"comming soon\">\r\n              <div className={(classes.feelings)}>\r\n                <Room htmlColor=\"green\" className={classes.shareIcon} />\r\n                <span className={classes.shareOptionText}>Location</span>\r\n              </div>\r\n              </Tooltip>\r\n              <Tooltip title=\"comming soon\">\r\n              <div className={(classes.feelings)}>\r\n                <EmojiEmotions\r\n                  htmlColor=\"goldenrod\"\r\n                  className={classes.shareIcon}\r\n                />\r\n                <span className={classes.shareOptionText}>Feelings</span>\r\n              </div>\r\n              </Tooltip>\r\n            </div>\r\n            <button className={classes.shareButton} type=\"submit\">\r\n              Share\r\n            </button>\r\n          </form>\r\n        </div>\r\n        {file && (\r\n          <div className={classes.shareImgPreviewContainer}>\r\n            <Cancel className={classes.cancelButton}/>\r\n            <img className={classes.shareImgPreview} src={URL.createObjectURL(file)} alt=\"\"/>\r\n          </div>\r\n        )}\r\n      </Card>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default UploadPostDialogue;\r\n",{"ruleId":"205","severity":1,"message":"206","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":23},{"ruleId":"205","severity":1,"message":"209","line":8,"column":11,"nodeType":"207","messageId":"208","endLine":8,"endColumn":18},{"ruleId":"210","severity":1,"message":"211","line":117,"column":5,"nodeType":"212","endLine":117,"endColumn":19,"suggestions":"213"},{"ruleId":"205","severity":1,"message":"214","line":20,"column":11,"nodeType":"207","messageId":"208","endLine":20,"endColumn":18},{"ruleId":"205","severity":1,"message":"215","line":20,"column":20,"nodeType":"207","messageId":"208","endLine":20,"endColumn":25},{"ruleId":"210","severity":1,"message":"216","line":35,"column":6,"nodeType":"212","endLine":35,"endColumn":8,"suggestions":"217"},{"ruleId":"205","severity":1,"message":"218","line":1,"column":9,"nodeType":"207","messageId":"208","endLine":1,"endColumn":12},{"ruleId":"205","severity":1,"message":"219","line":1,"column":14,"nodeType":"207","messageId":"208","endLine":1,"endColumn":18},{"ruleId":"205","severity":1,"message":"220","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":16},{"ruleId":"205","severity":1,"message":"221","line":2,"column":18,"nodeType":"207","messageId":"208","endLine":2,"endColumn":24},{"ruleId":"205","severity":1,"message":"222","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":13},{"ruleId":"205","severity":1,"message":"214","line":54,"column":12,"nodeType":"207","messageId":"208","endLine":54,"endColumn":19},{"ruleId":"205","severity":1,"message":"215","line":54,"column":21,"nodeType":"207","messageId":"208","endLine":54,"endColumn":26},{"ruleId":"205","severity":1,"message":"223","line":20,"column":3,"nodeType":"207","messageId":"208","endLine":20,"endColumn":18},{"ruleId":"205","severity":1,"message":"224","line":22,"column":3,"nodeType":"207","messageId":"208","endLine":22,"endColumn":12},{"ruleId":"225","severity":1,"message":"226","line":79,"column":5,"nodeType":"227","messageId":"228","endLine":79,"endColumn":12},{"ruleId":"205","severity":1,"message":"214","line":136,"column":12,"nodeType":"207","messageId":"208","endLine":136,"endColumn":19},{"ruleId":"205","severity":1,"message":"215","line":136,"column":21,"nodeType":"207","messageId":"208","endLine":136,"endColumn":26},{"ruleId":"229","severity":1,"message":"230","line":262,"column":11,"nodeType":"231","endLine":262,"endColumn":252},{"ruleId":"205","severity":1,"message":"232","line":79,"column":9,"nodeType":"207","messageId":"208","endLine":79,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":119,"column":42,"nodeType":"235","messageId":"236","endLine":119,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":119,"column":46,"nodeType":"235","messageId":"228","endLine":119,"endColumn":48},{"ruleId":"233","severity":1,"message":"234","line":119,"column":46,"nodeType":"235","messageId":"236","endLine":119,"endColumn":48},{"ruleId":"205","severity":1,"message":"214","line":18,"column":11,"nodeType":"207","messageId":"208","endLine":18,"endColumn":18},{"ruleId":"205","severity":1,"message":"215","line":18,"column":20,"nodeType":"207","messageId":"208","endLine":18,"endColumn":25},{"ruleId":"210","severity":1,"message":"239","line":42,"column":5,"nodeType":"212","endLine":42,"endColumn":15,"suggestions":"240"},{"ruleId":"237","severity":1,"message":"238","line":48,"column":31,"nodeType":"235","messageId":"228","endLine":48,"endColumn":33},{"ruleId":"205","severity":1,"message":"241","line":2,"column":62,"nodeType":"207","messageId":"208","endLine":2,"endColumn":72},{"ruleId":"205","severity":1,"message":"242","line":2,"column":74,"nodeType":"207","messageId":"208","endLine":2,"endColumn":78},{"ruleId":"205","severity":1,"message":"214","line":46,"column":12,"nodeType":"207","messageId":"208","endLine":46,"endColumn":19},{"ruleId":"205","severity":1,"message":"215","line":46,"column":21,"nodeType":"207","messageId":"208","endLine":46,"endColumn":26},{"ruleId":"205","severity":1,"message":"214","line":68,"column":11,"nodeType":"207","messageId":"208","endLine":68,"endColumn":18},{"ruleId":"205","severity":1,"message":"215","line":68,"column":20,"nodeType":"207","messageId":"208","endLine":68,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":142,"column":11,"nodeType":"231","endLine":142,"endColumn":79},{"ruleId":"205","severity":1,"message":"221","line":12,"column":25,"nodeType":"207","messageId":"208","endLine":12,"endColumn":31},{"ruleId":"205","severity":1,"message":"243","line":15,"column":10,"nodeType":"207","messageId":"208","endLine":15,"endColumn":21},{"ruleId":"205","severity":1,"message":"244","line":16,"column":10,"nodeType":"207","messageId":"208","endLine":16,"endColumn":25},{"ruleId":"205","severity":1,"message":"214","line":64,"column":11,"nodeType":"207","messageId":"208","endLine":64,"endColumn":18},{"ruleId":"205","severity":1,"message":"215","line":64,"column":20,"nodeType":"207","messageId":"208","endLine":64,"endColumn":25},{"ruleId":"210","severity":1,"message":"245","line":78,"column":6,"nodeType":"212","endLine":78,"endColumn":20,"suggestions":"246"},{"ruleId":"205","severity":1,"message":"247","line":89,"column":11,"nodeType":"207","messageId":"208","endLine":89,"endColumn":14},{"ruleId":"205","severity":1,"message":"248","line":3,"column":18,"nodeType":"207","messageId":"208","endLine":3,"endColumn":32},{"ruleId":"205","severity":1,"message":"249","line":3,"column":44,"nodeType":"207","messageId":"208","endLine":3,"endColumn":66},{"ruleId":"250","severity":1,"message":"251","line":75,"column":37,"nodeType":"252","messageId":"253","endLine":75,"endColumn":49,"fix":"254"},{"ruleId":"205","severity":1,"message":"214","line":87,"column":12,"nodeType":"207","messageId":"208","endLine":87,"endColumn":19},{"ruleId":"205","severity":1,"message":"215","line":87,"column":21,"nodeType":"207","messageId":"208","endLine":87,"endColumn":26},{"ruleId":"237","severity":1,"message":"238","line":115,"column":23,"nodeType":"235","messageId":"228","endLine":115,"endColumn":25},{"ruleId":"237","severity":1,"message":"255","line":115,"column":62,"nodeType":"235","messageId":"228","endLine":115,"endColumn":64},{"ruleId":"205","severity":1,"message":"247","line":161,"column":16,"nodeType":"207","messageId":"208","endLine":161,"endColumn":19},{"ruleId":"229","severity":1,"message":"230","line":199,"column":17,"nodeType":"231","endLine":199,"endColumn":204},{"ruleId":"205","severity":1,"message":"256","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":16},{"ruleId":"225","severity":1,"message":"257","line":113,"column":7,"nodeType":"227","messageId":"228","endLine":113,"endColumn":15},{"ruleId":"225","severity":1,"message":"258","line":118,"column":7,"nodeType":"227","messageId":"228","endLine":118,"endColumn":21},{"ruleId":"205","severity":1,"message":"214","line":132,"column":12,"nodeType":"207","messageId":"208","endLine":132,"endColumn":19},{"ruleId":"205","severity":1,"message":"215","line":132,"column":21,"nodeType":"207","messageId":"208","endLine":132,"endColumn":26},{"ruleId":"229","severity":1,"message":"230","line":146,"column":17,"nodeType":"231","endLine":149,"endColumn":19},{"ruleId":"229","severity":1,"message":"230","line":157,"column":17,"nodeType":"231","endLine":160,"endColumn":19},{"ruleId":"205","severity":1,"message":"248","line":3,"column":18,"nodeType":"207","messageId":"208","endLine":3,"endColumn":32},{"ruleId":"205","severity":1,"message":"249","line":3,"column":44,"nodeType":"207","messageId":"208","endLine":3,"endColumn":66},{"ruleId":"250","severity":1,"message":"251","line":72,"column":37,"nodeType":"252","messageId":"253","endLine":72,"endColumn":49,"fix":"259"},{"ruleId":"205","severity":1,"message":"214","line":83,"column":12,"nodeType":"207","messageId":"208","endLine":83,"endColumn":19},{"ruleId":"205","severity":1,"message":"215","line":83,"column":21,"nodeType":"207","messageId":"208","endLine":83,"endColumn":26},{"ruleId":"205","severity":1,"message":"247","line":155,"column":16,"nodeType":"207","messageId":"208","endLine":155,"endColumn":19},{"ruleId":"229","severity":1,"message":"230","line":193,"column":17,"nodeType":"231","endLine":193,"endColumn":204},{"ruleId":"205","severity":1,"message":"260","line":1,"column":9,"nodeType":"207","messageId":"208","endLine":1,"endColumn":15},{"ruleId":"205","severity":1,"message":"261","line":1,"column":29,"nodeType":"207","messageId":"208","endLine":1,"endColumn":45},{"ruleId":"205","severity":1,"message":"262","line":3,"column":27,"nodeType":"207","messageId":"208","endLine":3,"endColumn":42},{"ruleId":"205","severity":1,"message":"263","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":14},{"ruleId":"205","severity":1,"message":"209","line":13,"column":11,"nodeType":"207","messageId":"208","endLine":13,"endColumn":18},{"ruleId":"205","severity":1,"message":"214","line":16,"column":12,"nodeType":"207","messageId":"208","endLine":16,"endColumn":19},{"ruleId":"205","severity":1,"message":"215","line":16,"column":21,"nodeType":"207","messageId":"208","endLine":16,"endColumn":26},{"ruleId":"205","severity":1,"message":"264","line":20,"column":20,"nodeType":"207","messageId":"208","endLine":20,"endColumn":30},{"ruleId":"210","severity":1,"message":"265","line":28,"column":7,"nodeType":"212","endLine":28,"endColumn":16,"suggestions":"266"},{"ruleId":"210","severity":1,"message":"267","line":30,"column":5,"nodeType":"207","endLine":30,"endColumn":14,"suggestions":"268"},{"ruleId":"225","severity":1,"message":"257","line":116,"column":3,"nodeType":"227","messageId":"228","endLine":116,"endColumn":11},{"ruleId":"225","severity":1,"message":"258","line":121,"column":3,"nodeType":"227","messageId":"228","endLine":121,"endColumn":17},{"ruleId":"205","severity":1,"message":"269","line":163,"column":9,"nodeType":"207","messageId":"208","endLine":163,"endColumn":14},{"ruleId":"205","severity":1,"message":"214","line":166,"column":10,"nodeType":"207","messageId":"208","endLine":166,"endColumn":17},{"ruleId":"205","severity":1,"message":"215","line":166,"column":19,"nodeType":"207","messageId":"208","endLine":166,"endColumn":24},{"ruleId":"270","severity":1,"message":"271","line":169,"column":18,"nodeType":"272","messageId":"273","endLine":169,"endColumn":32,"fix":"274"},{"ruleId":"229","severity":1,"message":"230","line":216,"column":13,"nodeType":"231","endLine":219,"endColumn":15},{"ruleId":"229","severity":1,"message":"230","line":230,"column":13,"nodeType":"231","endLine":230,"endColumn":56},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["275"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user._id' and 'user.following'. Either include them or remove the dependency array.",["276"],"'Box' is defined but never used.","'Card' is defined but never used.","'Delete' is defined but never used.","'Remove' is defined but never used.","'axios' is defined but never used.","'MessageOutlined' is defined but never used.","'PersonAdd' is defined but never used.","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'navigate' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '>=' and '=='. Use parentheses to clarify the intended order of operations.","BinaryExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["277"],"'GroupSharp' is defined but never used.","'Home' is defined but never used.","'useDispatch' is defined but never used.","'listuserDetails' is defined but never used.","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["278"],"'res' is assigned a value but never used.","'DeleteOutlined' is defined but never used.","'FavoriteBorderOutlined' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property likes.","MemberExpression","unexpectedWhitespace",{"range":"279","text":"280"},"Expected '!==' and instead saw '!='.","'Cancel' is defined but never used.","Duplicate key 'shareImg'.","Duplicate key 'shareCancelImg'.",{"range":"281","text":"280"},"'Button' is defined but never used.","'TextareaAutosize' is defined but never used.","'ThumbUpOutlined' is defined but never used.","'moment' is defined but never used.","'setRefresh' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'c.userId'. Either include it or remove the dependency array.",["282"],"React Hook useEffect contains a call to 'setOwner'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user._id, c.userId] as a second argument to the useEffect Hook.",["283"],"'image' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"284","text":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},[2049,2052],"?.",[1992,1995],{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},[3565,3565],"()","Update the dependencies array to be: [navigate, token, userId]",{"range":"298","text":"299"},"Update the dependencies array to be: [user._id, user.following]",{"range":"300","text":"301"},"Update the dependencies array to be: [user._id, username]",{"range":"302","text":"303"},"Update the dependencies array to be: [user, refresh, postId]",{"range":"304","text":"305"},"Update the dependencies array to be: [c.userId, refresh]",{"range":"306","text":"307"},"Add dependencies array: [user._id, c.userId]",{"range":"308","text":"309"},[2609,2623],"[navigate, token, userId]",[1256,1258],"[user._id, user.following]",[1324,1334],"[user._id, username]",[1871,1885],"[user, refresh, postId]",[1112,1121],"[c.userId, refresh]",[1191,1191],", [user._id, c.userId]"]